[{"C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\index.js":"1","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\App.js":"2","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\reportWebVitals.js":"3","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\Home\\Home.jsx":"4","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\LogIn\\LogIn.jsx":"5","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\SignUp\\SignUp.jsx":"6","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\ResetPassword\\ResetPassword.jsx":"7","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\Page404\\Page404.jsx":"8","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\AddNewCarService\\AddNewCarService.jsx":"9","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\ForgotPassword\\ForgotPassword.jsx":"10","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\AboutUs\\AboutUs.jsx":"11","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\Dashboard\\Dashboard.jsx":"12","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\EditCarService\\EditCarService.jsx":"13","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\ReactTable\\ReactTable.jsx":"14","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\Validations\\FormsValidation.js":"15","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\ReactTable\\GlobalFilter.js":"16"},{"size":338,"mtime":1674824334172,"results":"17","hashOfConfig":"18"},{"size":1866,"mtime":1674824334132,"results":"19","hashOfConfig":"18"},{"size":375,"mtime":1674824334177,"results":"20","hashOfConfig":"18"},{"size":1612,"mtime":1674824334142,"results":"21","hashOfConfig":"18"},{"size":10083,"mtime":1674836832193,"results":"22","hashOfConfig":"18"},{"size":9117,"mtime":1674836851664,"results":"23","hashOfConfig":"18"},{"size":6525,"mtime":1674836846164,"results":"24","hashOfConfig":"18"},{"size":1086,"mtime":1674824334142,"results":"25","hashOfConfig":"18"},{"size":7374,"mtime":1674836801809,"results":"26","hashOfConfig":"18"},{"size":6368,"mtime":1674836822003,"results":"27","hashOfConfig":"18"},{"size":1713,"mtime":1674824334137,"results":"28","hashOfConfig":"18"},{"size":8941,"mtime":1674824334137,"results":"29","hashOfConfig":"18"},{"size":8042,"mtime":1674836813873,"results":"30","hashOfConfig":"18"},{"size":3850,"mtime":1674824334147,"results":"31","hashOfConfig":"18"},{"size":3560,"mtime":1674824334137,"results":"32","hashOfConfig":"18"},{"size":415,"mtime":1674824334147,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19w72d5",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\index.js",[],[],"C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\App.js",[],[],"C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\Home\\Home.jsx",[],[],"C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\LogIn\\LogIn.jsx",["85","86","87"],[],"C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\SignUp\\SignUp.jsx",["88"],[],"C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\ResetPassword\\ResetPassword.jsx",["89"],[],"C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\Page404\\Page404.jsx",[],[],"C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\AddNewCarService\\AddNewCarService.jsx",[],[],"C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\ForgotPassword\\ForgotPassword.jsx",["90","91"],[],"C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\AboutUs\\AboutUs.jsx",[],[],"C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\Dashboard\\Dashboard.jsx",["92","93","94","95","96","97","98"],[],"import React, { useMemo, useEffect, useState } from 'react';\r\nimport { useNavigate  } from 'react-router-dom';\r\nimport ReactTable from '../ReactTable/ReactTable';\r\nimport imageProfile from '../../images/profile-icon.png';\r\nimport imageEdit from '../../images/edit-car-image.png';\r\nimport imageDelete from '../../images/delete-car-image.png';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Dashboard.css';\r\n\r\n/* Dashboard Component */\r\nconst Dashboard = () => {\r\n    \r\n    const navigate = useNavigate(); /* define hook to navigate to other pages */\r\n    const [carsTableData, setCarsTableData] = useState([]); /* define state to save the cars data */\r\n\r\n    const storedUser = localStorage.getItem('user');\r\n    if(!storedUser) { \r\n        navigate('*'); /* if the user is not exists in local storage, navigate to the 404 page */\r\n    }\r\n    const user = JSON.parse(storedUser); /* else get the user data from local storage */\r\n\r\n    useEffect(() => {\r\n        // Check for a stored session in local storage\r\n        const storedConnected = localStorage.getItem('connected');\r\n        if (!storedConnected) {\r\n            navigate('*'); /* if the user is not logged in, navigate to the 404 page */\r\n        }\r\n        \r\n        /* else get the cars data from the server */\r\n        async function fetchData() {\r\n            const response = await fetch('/getCarsData'); /* send request to the server */\r\n            const json = await response.json(); /* get the response from the server */\r\n            setCarsTableData(json); /* save the cars data in the carsTableData state */\r\n            console.log(json);\r\n        }\r\n        fetchData();\r\n\r\n    }, []); // Only run this effect once\r\n\r\n    /* function that navigate to the addNewCarService page when click on edit specific car service*/\r\n    const onClickEdit = (row) => {\r\n        console.log('Edit button clicked for car with treatment number: ', row.original.treatmentNumber);\r\n        localStorage.setItem('carService', JSON.stringify(row.original)); /* save the car service data that choose to edit in local storage */\r\n        navigate('/editCarService'); /* navigate to the editCarService page */\r\n    }\r\n\r\n    /* function that delete the specific car service when click on delete specific car service*/\r\n    const onClickDelete = async (row) => {\r\n        console.log('Delete button clicked for car with treatment number: ', row.original.treatmentNumber);\r\n        \r\n        /* send request to the server to delete the specific car service */\r\n        await fetch('/deleteCar', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                treatmentNumber:   row.original.treatmentNumber,\r\n            })\r\n        })\r\n       window.location.reload(false) /* reload the page after delete car service*/\r\n    }\r\n\r\n    /* function that navigate to the addNewCarService page when click on add new car service*/\r\n    const handleClickAddNewCarService = () => {\r\n        navigate('/addNewCarService');\r\n    };\r\n\r\n    /* function that implement log out- remove the coonected, user, session from the local storage and move to the home page */\r\n    const handleOnClickLogOut = () => {\r\n        localStorage.removeItem('connected');\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('session');\r\n        navigate('/');\r\n    }\r\n\r\n    /* define the columns of the cars service table */\r\n    const tableColumns = useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Treatment Number',\r\n                accessor: 'treatmentNumber',\r\n            },\r\n            {\r\n                Header: 'Treatment Information',\r\n                accessor: 'treatmentInfo',\r\n            },\r\n            {\r\n                Header: 'Date',\r\n                accessor: 'dateT',\r\n                Cell: ({ cell: { row } }) => { /* define the date format */\r\n                    const date = new Date(row.original.dateT);\r\n                    const day = date.getDate();\r\n                    const month = date.getMonth() + 1;\r\n                    const year = date.getFullYear();\r\n                    const hours = date.getHours();\r\n                    const minutes = date.getMinutes();\r\n                    const dateStr = `${day}/${month}/${year} ${hours}:${minutes}`;\r\n                    return dateStr;\r\n                }\r\n            },\r\n            {\r\n                Header: 'Worker Email',\r\n                accessor: 'workerEmail',\r\n            },\r\n            {\r\n                Header: 'Car Number',\r\n                accessor: 'carNumber',\r\n            },\r\n            {\r\n                Header: 'Action',\r\n                accessor: 'action',\r\n                Cell: row => (\r\n                    <div>\r\n                        <button onClick={() => onClickEdit(row.row)} className='button-image'> {/* define the edit button */}\r\n                            <img src={imageEdit} alt=\"image-button\" style={{ width: '30px', height: '30px' }}/>\r\n                        </button>\r\n                        <button onClick={(e) => onClickDelete(row.row)} className='button-image'> {/* define the delete button */}\r\n                            <img src={imageDelete} alt=\"image-button\" style={{ width: '30px', height: '30px' }}/>\r\n                        </button>\r\n                    </div>     \r\n                )\r\n            }\r\n        ],\r\n        [],\r\n    );\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div id=\"page-top\">\r\n\r\n                {/* Page Wrapper */}\r\n                <div id=\"wrapper\">\r\n\r\n                    {/* Content Wrapper */}\r\n                    <div id=\"content-wrapper\" className=\"d-flex flex-column\">\r\n\r\n                        {/* Main Content */}\r\n                        <div id=\"content\">\r\n\r\n                            {/* Topbar */}\r\n                            <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\r\n                                \r\n                                <a href=\"#\" className=\"nav-link link-log-out\" onClick={handleOnClickLogOut}>Log Out</a>\r\n                                {/* Topbar Navbar */}\r\n                                <ul className=\"navbar-nav ml-auto\">\r\n                                    \r\n\r\n                                    <div className=\"topbar-divider d-none d-sm-block\"></div>\r\n\r\n                                    {/* Nav Item - User Information */}\r\n                                    <li className=\"nav-item dropdown no-arrow\">\r\n                                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"userDropdown\" role=\"button\"\r\n                                            data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                            <span className=\"mr-2 d-none d-lg-inline text-gray-600 big\">{`${user?.firstName} ${user?.lastName}`}</span>\r\n                                            <img className=\"img-profile rounded-circle\" src={imageProfile} style={{ width: '45px', height: '40px' }}/>\r\n                                        </a>\r\n                                    </li>\r\n                                </ul>\r\n                            </nav>\r\n                            {/* End of Topbar */}\r\n\r\n                            {/* Begin Page Content */}\r\n                            <div className=\"container-fluid\">\r\n\r\n                                {/* Page Heading */}\r\n                                <h1 className=\"h3 mb-2 text-gray-800\">Car Service Table</h1>\r\n                                <button className=\"mb-4 btn btn-primary\" onClick={handleClickAddNewCarService}>Add New Car Service</button>\r\n\r\n                                <div className=\"card shadow mb-4\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"table-responsive\">\r\n                                            <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\">\r\n                                                <ReactTable columns={tableColumns} data={carsTableData} />\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* /.container-fluid */}\r\n                        </div>\r\n                        {/* End of Main Content */}\r\n\r\n                    </div>\r\n                    {/* End of Content Wrapper */}\r\n\r\n                </div>\r\n                {/* End of Page Wrapper */}\r\n\r\n                {/* Scroll to Top Button*/}\r\n                <a className=\"scroll-to-top rounded\" href=\"#page-top\">\r\n                    <i className=\"fas fa-angle-up\"></i>\r\n                </a>\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\EditCarService\\EditCarService.jsx",[],[],"C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\ReactTable\\ReactTable.jsx",["99"],[],"import { GlobalFilter } from 'components/ReactTable/GlobalFilter';\r\nimport React, { useEffect } from 'react';\r\nimport { useGlobalFilter, useSortBy, useTable, usePagination } from 'react-table';\r\nimport './ReactTable.css';\r\n\r\n/* ReactTable Component */\r\nconst ReactTable = ({\r\n    columns,\r\n    data = [],\r\n    placeholder = <></>,\r\n    onTableRowClick = () => {},\r\n    onTableDoubleClick = () => {},\r\n    getTableRowCSS = () => '',\r\n    filterString = ''\r\n}) => {\r\n\r\n    // Hooks\r\n    const { getTableProps,\r\n            getTableBodyProps,\r\n            headerGroups,\r\n            page,\r\n            nextPage,\r\n            previousPage,\r\n            canNextPage,\r\n            canPreviousPage, \r\n            pageOptions,\r\n            prepareRow,\r\n            state, \r\n            setGlobalFilter } =\r\n        useTable({ columns, data, initialState: { pageSize: 5 } }, useGlobalFilter, useSortBy, usePagination);\r\n\r\n    const { globalFilter } = state;\r\n    const { pageIndex } = state;\r\n    \r\n    // Listen for input changes outside\r\n    useEffect(() => {\r\n        setGlobalFilter(filterString);\r\n    }, [filterString, data]);\r\n\r\n    return (\r\n        <div className=\"table-container\">\r\n        {data.length === 0 ? (\r\n            placeholder\r\n        ) : (\r\n            <div className='table-filter-container'>\r\n                <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\r\n                <table {...getTableProps()}>\r\n                <thead>\r\n                    {headerGroups.map((headerGroup) => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map((column) => (\r\n                        <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                            {column.render('Header')}\r\n                            <span> {column.isSorted ? (column.isSortedDesc ? '🔼' : '🔽') : ''}</span>{' '}\r\n                        </th>\r\n                        ))}\r\n                    </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {page.map((row) => {\r\n                    prepareRow(row);\r\n                    return (\r\n                        <tr\r\n                        {...row.getRowProps()}\r\n                        className={getTableRowCSS(row)}\r\n                        onClick={() => onTableRowClick(row)}\r\n                        onDoubleClick={() => onTableDoubleClick(row)}\r\n                        >\r\n                        {row.cells.map((cell) => {\r\n                            return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>;\r\n                        })}\r\n                        </tr>\r\n                    );\r\n                    })}\r\n                </tbody>\r\n                </table>\r\n                <div className='paging-data-container'>\r\n                    <div className='total-number-of-records'>\r\n                        Showing {pageIndex * 5 + 1} to {pageIndex * 5 + page.length} of {data.length}{' '} records\r\n                    </div>\r\n                    <div className='paging-data-buttons'>\r\n                        <span>\r\n                            page{' '}\r\n                            <strong>\r\n                                {pageIndex + 1} of {pageOptions.length}\r\n                            </strong>{' '}\r\n                        </span>\r\n                        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                            Previous\r\n                        </button>\r\n                        <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                            Next\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReactTable;\r\n","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\Validations\\FormsValidation.js",["100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129"],[],"import * as yup from 'yup'; /* yup is a JavaScript schema builder for value parsing and validation */\r\n\r\n/* Regular expression for letters only */\r\nconst lettersRegExp = /^[a-zA-Z]+$/;\r\n\r\n/* Check if the value contains only letters */\r\nconst checkIfOnlyLetters = (value) => {\r\n    return lettersRegExp.test(value);\r\n};\r\n\r\n/* yup schema for sign up form */\r\nexport const signUpSchema = yup.object().shape({\r\n    firstName: yup.string().required('First name is required').test('is-letters-only', 'First name can only contain letters', checkIfOnlyLetters),\r\n    lastName: yup.string().required('Last name is required').test('is-letters-only', 'Last name can only contain letters', checkIfOnlyLetters),\r\n    email: yup.string().email('Invalid email').required('Email is required'),\r\n    password: yup.string().min(6, 'Password must be at least 6 chars').matches(/[A-Z]/, 'Must include an uppercase character')  \r\n        .matches(/[a-z]/, 'Must include a lowercase character').matches(/\\d/, 'Must include a number')\r\n        .matches(/[!@#\\$%\\^&\\*\\(\\)\\-_\\=\\+\\\\\\|\\[\\]\\{\\};':\\\"\\/<>,\\.\\?`~]+/, 'Must include a special character')\r\n        .required('Password is required'),\r\n    repeatPassword: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match').required('Confirm password is required')\r\n});\r\n\r\n/* yup schema for log in form */\r\nexport const logInSchema = yup.object().shape({\r\n    email: yup.string().email('Invalid email').required('Email is required'),\r\n    password: yup.string().min(6, 'Password must be at least 6 chars').matches(/[A-Z]/, 'Must include an uppercase character')\r\n        .matches(/[a-z]/, 'Must include a lowercase character').matches(/\\d/, 'Must include a number')\r\n        .matches(/[!@#\\$%\\^&\\*\\(\\)\\-_\\=\\+\\\\\\|\\[\\]\\{\\};':\\\"\\/<>,\\.\\?`~]+/, 'Must include a special character')\r\n        .required('Password is required'),\r\n});\r\n\r\n/* yup schema for forgot password form */\r\nexport const forgotPasswordSchema = yup.object().shape({\r\n    email: yup.string().email('Invalid email').required('Email is required'),\r\n});\r\n\r\n/* yup schema for reset password form */\r\nexport const resetPasswordSchema = yup.object().shape({\r\n    email: yup.string().email('Invalid email').required('Email is required'),\r\n    password: yup.string().min(6, 'Password must be at least 6 chars').required('Password is required'),\r\n    repeatPassword: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match').required('Confirm password is required')\r\n});\r\n\r\n/* yup schema for add new car form */\r\nexport const addNewcarServiceSchema = yup.object().shape({\r\n    treatmentNumber: yup.number().integer('Must be an integer number').positive('Must be a positive number').required('Treatment number is required').typeError(\"Must be a number\"),\r\n    treatmentInformation: yup.string().required('Treatment information is required'),\r\n    workerEmail: yup.string().email('Invalid email').required('Worker email is required'),\r\n    carNumber: yup.number().integer('Must be an integer number').positive('Must be a positive number').required('Car number is required').typeError(\"Must be a number\"),\r\n});\r\n\r\n/* yup schema for edit car form */\r\nexport const editcarServiceSchema = yup.object().shape({\r\n    treatmentInformation: yup.string().required('Treatment information is required'),\r\n    workerEmail: yup.string().email('Invalid email').required('Worker email is required'),\r\n    carNumber: yup.number().integer('Must be an integer number').positive('Must be a positive number').required('Car number is required').typeError(\"Must be a number\"),\r\n});","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\ReactTable\\GlobalFilter.js",[],[],{"ruleId":"130","severity":1,"message":"131","line":32,"column":10,"nodeType":"132","endLine":32,"endColumn":12,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":187,"column":45,"nodeType":"136","endLine":187,"endColumn":117},{"ruleId":"134","severity":1,"message":"135","line":190,"column":45,"nodeType":"136","endLine":190,"endColumn":109},{"ruleId":"134","severity":1,"message":"135","line":155,"column":37,"nodeType":"136","endLine":155,"endColumn":100},{"ruleId":"134","severity":1,"message":"135","line":105,"column":45,"nodeType":"136","endLine":105,"endColumn":107},{"ruleId":"134","severity":1,"message":"135","line":109,"column":45,"nodeType":"136","endLine":109,"endColumn":109},{"ruleId":"134","severity":1,"message":"135","line":112,"column":45,"nodeType":"136","endLine":112,"endColumn":108},{"ruleId":"130","severity":1,"message":"131","line":38,"column":8,"nodeType":"132","endLine":38,"endColumn":10,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":114,"column":29,"nodeType":"136","endLine":114,"endColumn":112},{"ruleId":"138","severity":1,"message":"139","line":117,"column":29,"nodeType":"136","endLine":117,"endColumn":114},{"ruleId":"130","severity":1,"message":"140","line":123,"column":9,"nodeType":"132","endLine":123,"endColumn":11,"suggestions":"141"},{"ruleId":"134","severity":1,"message":"142","line":142,"column":33,"nodeType":"136","endLine":142,"endColumn":109},{"ruleId":"134","severity":1,"message":"142","line":151,"column":41,"nodeType":"136","endLine":152,"endColumn":111},{"ruleId":"143","severity":1,"message":"144","line":154,"column":45,"nodeType":"136","endLine":154,"endColumn":151},{"ruleId":"130","severity":1,"message":"145","line":38,"column":8,"nodeType":"132","endLine":38,"endColumn":28,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":18,"column":23,"nodeType":"149","messageId":"150","endLine":18,"endColumn":24,"suggestions":"151"},{"ruleId":"147","severity":1,"message":"152","line":18,"column":26,"nodeType":"149","messageId":"150","endLine":18,"endColumn":27,"suggestions":"153"},{"ruleId":"147","severity":1,"message":"154","line":18,"column":29,"nodeType":"149","messageId":"150","endLine":18,"endColumn":30,"suggestions":"155"},{"ruleId":"147","severity":1,"message":"156","line":18,"column":31,"nodeType":"149","messageId":"150","endLine":18,"endColumn":32,"suggestions":"157"},{"ruleId":"147","severity":1,"message":"158","line":18,"column":33,"nodeType":"149","messageId":"150","endLine":18,"endColumn":34,"suggestions":"159"},{"ruleId":"147","severity":1,"message":"160","line":18,"column":38,"nodeType":"149","messageId":"150","endLine":18,"endColumn":39,"suggestions":"161"},{"ruleId":"147","severity":1,"message":"162","line":18,"column":40,"nodeType":"149","messageId":"150","endLine":18,"endColumn":41,"suggestions":"163"},{"ruleId":"147","severity":1,"message":"164","line":18,"column":44,"nodeType":"149","messageId":"150","endLine":18,"endColumn":45,"suggestions":"165"},{"ruleId":"147","severity":1,"message":"166","line":18,"column":46,"nodeType":"149","messageId":"150","endLine":18,"endColumn":47,"suggestions":"167"},{"ruleId":"147","severity":1,"message":"168","line":18,"column":50,"nodeType":"149","messageId":"150","endLine":18,"endColumn":51,"suggestions":"169"},{"ruleId":"147","severity":1,"message":"170","line":18,"column":52,"nodeType":"149","messageId":"150","endLine":18,"endColumn":53,"suggestions":"171"},{"ruleId":"147","severity":1,"message":"172","line":18,"column":57,"nodeType":"149","messageId":"150","endLine":18,"endColumn":58,"suggestions":"173"},{"ruleId":"147","severity":1,"message":"174","line":18,"column":59,"nodeType":"149","messageId":"150","endLine":18,"endColumn":60,"suggestions":"175"},{"ruleId":"147","severity":1,"message":"176","line":18,"column":64,"nodeType":"149","messageId":"150","endLine":18,"endColumn":65,"suggestions":"177"},{"ruleId":"147","severity":1,"message":"178","line":18,"column":66,"nodeType":"149","messageId":"150","endLine":18,"endColumn":67,"suggestions":"179"},{"ruleId":"147","severity":1,"message":"148","line":28,"column":23,"nodeType":"149","messageId":"150","endLine":28,"endColumn":24,"suggestions":"180"},{"ruleId":"147","severity":1,"message":"152","line":28,"column":26,"nodeType":"149","messageId":"150","endLine":28,"endColumn":27,"suggestions":"181"},{"ruleId":"147","severity":1,"message":"154","line":28,"column":29,"nodeType":"149","messageId":"150","endLine":28,"endColumn":30,"suggestions":"182"},{"ruleId":"147","severity":1,"message":"156","line":28,"column":31,"nodeType":"149","messageId":"150","endLine":28,"endColumn":32,"suggestions":"183"},{"ruleId":"147","severity":1,"message":"158","line":28,"column":33,"nodeType":"149","messageId":"150","endLine":28,"endColumn":34,"suggestions":"184"},{"ruleId":"147","severity":1,"message":"160","line":28,"column":38,"nodeType":"149","messageId":"150","endLine":28,"endColumn":39,"suggestions":"185"},{"ruleId":"147","severity":1,"message":"162","line":28,"column":40,"nodeType":"149","messageId":"150","endLine":28,"endColumn":41,"suggestions":"186"},{"ruleId":"147","severity":1,"message":"164","line":28,"column":44,"nodeType":"149","messageId":"150","endLine":28,"endColumn":45,"suggestions":"187"},{"ruleId":"147","severity":1,"message":"166","line":28,"column":46,"nodeType":"149","messageId":"150","endLine":28,"endColumn":47,"suggestions":"188"},{"ruleId":"147","severity":1,"message":"168","line":28,"column":50,"nodeType":"149","messageId":"150","endLine":28,"endColumn":51,"suggestions":"189"},{"ruleId":"147","severity":1,"message":"170","line":28,"column":52,"nodeType":"149","messageId":"150","endLine":28,"endColumn":53,"suggestions":"190"},{"ruleId":"147","severity":1,"message":"172","line":28,"column":57,"nodeType":"149","messageId":"150","endLine":28,"endColumn":58,"suggestions":"191"},{"ruleId":"147","severity":1,"message":"174","line":28,"column":59,"nodeType":"149","messageId":"150","endLine":28,"endColumn":60,"suggestions":"192"},{"ruleId":"147","severity":1,"message":"176","line":28,"column":64,"nodeType":"149","messageId":"150","endLine":28,"endColumn":65,"suggestions":"193"},{"ruleId":"147","severity":1,"message":"178","line":28,"column":66,"nodeType":"149","messageId":"150","endLine":28,"endColumn":67,"suggestions":"194"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["195"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",["196"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useMemo has a missing dependency: 'onClickEdit'. Either include it or remove the dependency array.",["197"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'setGlobalFilter'. Either include it or remove the dependency array.",["198"],"no-useless-escape","Unnecessary escape character: \\$.","Literal","unnecessaryEscape",["199","200"],"Unnecessary escape character: \\^.",["201","202"],"Unnecessary escape character: \\*.",["203","204"],"Unnecessary escape character: \\(.",["205","206"],"Unnecessary escape character: \\).",["207","208"],"Unnecessary escape character: \\=.",["209","210"],"Unnecessary escape character: \\+.",["211","212"],"Unnecessary escape character: \\|.",["213","214"],"Unnecessary escape character: \\[.",["215","216"],"Unnecessary escape character: \\{.",["217","218"],"Unnecessary escape character: \\}.",["219","220"],"Unnecessary escape character: \\\".",["221","222"],"Unnecessary escape character: \\/.",["223","224"],"Unnecessary escape character: \\..",["225","226"],"Unnecessary escape character: \\?.",["227","228"],["229","230"],["231","232"],["233","234"],["235","236"],["237","238"],["239","240"],["241","242"],["243","244"],["245","246"],["247","248"],["249","250"],["251","252"],["253","254"],["255","256"],["257","258"],{"desc":"259","fix":"260"},{"desc":"259","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"messageId":"266","fix":"267","desc":"268"},{"messageId":"269","fix":"270","desc":"271"},{"messageId":"266","fix":"272","desc":"268"},{"messageId":"269","fix":"273","desc":"271"},{"messageId":"266","fix":"274","desc":"268"},{"messageId":"269","fix":"275","desc":"271"},{"messageId":"266","fix":"276","desc":"268"},{"messageId":"269","fix":"277","desc":"271"},{"messageId":"266","fix":"278","desc":"268"},{"messageId":"269","fix":"279","desc":"271"},{"messageId":"266","fix":"280","desc":"268"},{"messageId":"269","fix":"281","desc":"271"},{"messageId":"266","fix":"282","desc":"268"},{"messageId":"269","fix":"283","desc":"271"},{"messageId":"266","fix":"284","desc":"268"},{"messageId":"269","fix":"285","desc":"271"},{"messageId":"266","fix":"286","desc":"268"},{"messageId":"269","fix":"287","desc":"271"},{"messageId":"266","fix":"288","desc":"268"},{"messageId":"269","fix":"289","desc":"271"},{"messageId":"266","fix":"290","desc":"268"},{"messageId":"269","fix":"291","desc":"271"},{"messageId":"266","fix":"292","desc":"268"},{"messageId":"269","fix":"293","desc":"271"},{"messageId":"266","fix":"294","desc":"268"},{"messageId":"269","fix":"295","desc":"271"},{"messageId":"266","fix":"296","desc":"268"},{"messageId":"269","fix":"297","desc":"271"},{"messageId":"266","fix":"298","desc":"268"},{"messageId":"269","fix":"299","desc":"271"},{"messageId":"266","fix":"300","desc":"268"},{"messageId":"269","fix":"301","desc":"271"},{"messageId":"266","fix":"302","desc":"268"},{"messageId":"269","fix":"303","desc":"271"},{"messageId":"266","fix":"304","desc":"268"},{"messageId":"269","fix":"305","desc":"271"},{"messageId":"266","fix":"306","desc":"268"},{"messageId":"269","fix":"307","desc":"271"},{"messageId":"266","fix":"308","desc":"268"},{"messageId":"269","fix":"309","desc":"271"},{"messageId":"266","fix":"310","desc":"268"},{"messageId":"269","fix":"311","desc":"271"},{"messageId":"266","fix":"312","desc":"268"},{"messageId":"269","fix":"313","desc":"271"},{"messageId":"266","fix":"314","desc":"268"},{"messageId":"269","fix":"315","desc":"271"},{"messageId":"266","fix":"316","desc":"268"},{"messageId":"269","fix":"317","desc":"271"},{"messageId":"266","fix":"318","desc":"268"},{"messageId":"269","fix":"319","desc":"271"},{"messageId":"266","fix":"320","desc":"268"},{"messageId":"269","fix":"321","desc":"271"},{"messageId":"266","fix":"322","desc":"268"},{"messageId":"269","fix":"323","desc":"271"},{"messageId":"266","fix":"324","desc":"268"},{"messageId":"269","fix":"325","desc":"271"},{"messageId":"266","fix":"326","desc":"268"},{"messageId":"269","fix":"327","desc":"271"},{"messageId":"266","fix":"328","desc":"268"},{"messageId":"269","fix":"329","desc":"271"},"Update the dependencies array to be: [navigate]",{"range":"330","text":"331"},{"range":"332","text":"331"},"Update the dependencies array to be: [onClickEdit]",{"range":"333","text":"334"},"Update the dependencies array to be: [filterString, data, setGlobalFilter]",{"range":"335","text":"336"},"removeEscape",{"range":"337","text":"338"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"339","text":"340"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"341","text":"338"},{"range":"342","text":"340"},{"range":"343","text":"338"},{"range":"344","text":"340"},{"range":"345","text":"338"},{"range":"346","text":"340"},{"range":"347","text":"338"},{"range":"348","text":"340"},{"range":"349","text":"338"},{"range":"350","text":"340"},{"range":"351","text":"338"},{"range":"352","text":"340"},{"range":"353","text":"338"},{"range":"354","text":"340"},{"range":"355","text":"338"},{"range":"356","text":"340"},{"range":"357","text":"338"},{"range":"358","text":"340"},{"range":"359","text":"338"},{"range":"360","text":"340"},{"range":"361","text":"338"},{"range":"362","text":"340"},{"range":"363","text":"338"},{"range":"364","text":"340"},{"range":"365","text":"338"},{"range":"366","text":"340"},{"range":"367","text":"338"},{"range":"368","text":"340"},{"range":"369","text":"338"},{"range":"370","text":"340"},{"range":"371","text":"338"},{"range":"372","text":"340"},{"range":"373","text":"338"},{"range":"374","text":"340"},{"range":"375","text":"338"},{"range":"376","text":"340"},{"range":"377","text":"338"},{"range":"378","text":"340"},{"range":"379","text":"338"},{"range":"380","text":"340"},{"range":"381","text":"338"},{"range":"382","text":"340"},{"range":"383","text":"338"},{"range":"384","text":"340"},{"range":"385","text":"338"},{"range":"386","text":"340"},{"range":"387","text":"338"},{"range":"388","text":"340"},{"range":"389","text":"338"},{"range":"390","text":"340"},{"range":"391","text":"338"},{"range":"392","text":"340"},{"range":"393","text":"338"},{"range":"394","text":"340"},{"range":"395","text":"338"},{"range":"396","text":"340"},{"range":"397","text":"338"},{"range":"398","text":"340"},[1421,1423],"[navigate]",[1667,1669],[5418,5420],"[onClickEdit]",[1101,1121],"[filterString, data, setGlobalFilter]",[1035,1036],"",[1035,1035],"\\",[1038,1039],[1038,1038],[1041,1042],[1041,1041],[1043,1044],[1043,1043],[1045,1046],[1045,1045],[1050,1051],[1050,1050],[1052,1053],[1052,1052],[1056,1057],[1056,1056],[1058,1059],[1058,1058],[1062,1063],[1062,1062],[1064,1065],[1064,1064],[1069,1070],[1069,1069],[1071,1072],[1071,1071],[1076,1077],[1076,1076],[1078,1079],[1078,1078],[1725,1726],[1725,1725],[1728,1729],[1728,1728],[1731,1732],[1731,1731],[1733,1734],[1733,1733],[1735,1736],[1735,1735],[1740,1741],[1740,1740],[1742,1743],[1742,1742],[1746,1747],[1746,1746],[1748,1749],[1748,1748],[1752,1753],[1752,1752],[1754,1755],[1754,1754],[1759,1760],[1759,1759],[1761,1762],[1761,1761],[1766,1767],[1766,1766],[1768,1769],[1768,1768]]
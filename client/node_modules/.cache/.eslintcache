[{"C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\index.js":"1","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\App.js":"2","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\reportWebVitals.js":"3","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\Home\\Home.jsx":"4","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\LogIn\\LogIn.jsx":"5","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\SignUp\\SignUp.jsx":"6","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\ResetPassword\\ResetPassword.jsx":"7","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\Page404\\Page404.jsx":"8","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\AddNewCarService\\AddNewCarService.jsx":"9","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\ForgotPassword\\ForgotPassword.jsx":"10","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\AboutUs\\AboutUs.jsx":"11","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\Dashboard\\Dashboard.jsx":"12","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\EditCarService\\EditCarService.jsx":"13","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\ReactTable\\ReactTable.jsx":"14","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\Validations\\FormsValidation.js":"15","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\ReactTable\\GlobalFilter.js":"16"},{"size":338,"mtime":1674824334172,"results":"17","hashOfConfig":"18"},{"size":1866,"mtime":1674824334132,"results":"19","hashOfConfig":"18"},{"size":375,"mtime":1674824334177,"results":"20","hashOfConfig":"18"},{"size":1612,"mtime":1674824334142,"results":"21","hashOfConfig":"18"},{"size":10719,"mtime":1674909818233,"results":"22","hashOfConfig":"18"},{"size":9759,"mtime":1674909924160,"results":"23","hashOfConfig":"18"},{"size":6525,"mtime":1674836846164,"results":"24","hashOfConfig":"18"},{"size":1086,"mtime":1674824334142,"results":"25","hashOfConfig":"18"},{"size":7374,"mtime":1674836801809,"results":"26","hashOfConfig":"18"},{"size":6368,"mtime":1674836822003,"results":"27","hashOfConfig":"18"},{"size":1609,"mtime":1674850672183,"results":"28","hashOfConfig":"18"},{"size":8959,"mtime":1674909959259,"results":"29","hashOfConfig":"18"},{"size":8042,"mtime":1674836813873,"results":"30","hashOfConfig":"18"},{"size":3850,"mtime":1674824334147,"results":"31","hashOfConfig":"18"},{"size":3560,"mtime":1674824334137,"results":"32","hashOfConfig":"18"},{"size":415,"mtime":1674824334147,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19w72d5",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\index.js",[],[],"C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\App.js",[],[],"C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\Home\\Home.jsx",[],[],"C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\LogIn\\LogIn.jsx",["86","87","88"],[],"C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\SignUp\\SignUp.jsx",["89"],[],"C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\ResetPassword\\ResetPassword.jsx",["90"],[],"import React,{useState} from 'react';\r\nimport md5 from 'md5';\r\nimport {resetPasswordSchema } from 'Validations/FormsValidation';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './ResetPassword.css';\r\n\r\n/* ResetPassword Component */\r\nconst ResetPassword = () => {\r\n\r\n    const navigate = useNavigate(); /* define hook to navigate to other pages */\r\n    const [showModal, setShow] = useState(false);/*define state for the modal box */\r\n    const [msgModal, setMsgModal] = useState('');/*define state for the message modal box */\r\n\r\n    /* function that close the modal and reset the message modal*/\r\n    const handleClose = () =>{\r\n        setShow(false);\r\n        setMsgModal('');\r\n   }\r\n   /* function that open the modal and displays it*/\r\n   const handleShow = () =>{\r\n       setShow(true);\r\n   }\r\n\r\n    /* function that navigates to the log in page */\r\n    const handleClickLogIn = () => {\r\n        navigate('/logIn');\r\n    };\r\n\r\n    /* function that navigates to the home page */\r\n    const handleClickHome = () => {\r\n        navigate('/');\r\n    };\r\n\r\n    /* define useForm for the resetPassword form */\r\n    const { register, handleSubmit, formState: { errors }} = useForm({\r\n        resolver: yupResolver(resetPasswordSchema), /* validate the form with the schema */\r\n        mode: \"onChange\" /* validate the form on change */\r\n    });\r\n\r\n    /* function that submit the form and send the data to the server*/\r\n    const submitForm = async (data) => {\r\n\r\n        /* define the request message */\r\n        const requestMsg = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(\r\n                {\r\n                    title:       'ResetPassword',\r\n                    email:        data.email,\r\n                    password:     md5(data.password)\r\n                })\r\n        };\r\n        console.log(\"requesting\");\r\n\r\n        const response = await fetch('/resetPassword', requestMsg) /* send the data to the server */\r\n        console.log(response);\r\n        if (!response.ok) { /* if the response is not ok, alert the user */\r\n            setMsgModal('Invalid Details.');\r\n            handleShow();\r\n            return;\r\n        }\r\n        const responseData = await response.json(); /* retrieve the response data */\r\n        console.log(responseData);\r\n        setMsgModal('Updated.');/* alert the user */\r\n        handleShow();\r\n        handleClickLogIn(); /* navigate to the log in page */\r\n    };\r\n\r\n    return (\r\n        <div className=\"container p-3\">\r\n\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-xl-10 col-lg-12 col-md-9\">\r\n                    <div className=\"card o-hidden border-0 shadow-lg my-5\">\r\n                        <div className=\"card-body p-0\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-6 d-none d-lg-block bg-reset-password-image\"></div>\r\n                                <div className=\"col-lg-6\">\r\n                                    <div className=\"p-5\">\r\n                                        <div className=\"text-center\">\r\n                                            <h1 className=\"h4 text-gray-900 mb-4\">Reset Password!</h1>\r\n                                        </div>\r\n                                        <form className=\"user\" onSubmit={handleSubmit(submitForm)}>\r\n                                            <div className=\"form-group\">\r\n                                                <input type=\"email\" className=\"form-control form-control-user\"\r\n                                                    name=\"email\" aria-describedby=\"emailHelp\"\r\n                                                    placeholder=\"Enter Email Address...\" {...register('email')}/>\r\n                                                {errors.email ? <p className='error-msg'>{errors.email?.message}</p> : <p className='space2'>{'.'}</p>} {/* display error message if the email is not valid */}\r\n                                                <input type=\"password\" className=\"form-control form-control-user\"\r\n                                                    name=\"password\" placeholder=\"Password\" {...register('password')}/>\r\n                                                {errors.password ? <p className='error-msg'>{errors.password?.message}</p> : <p className='space2'>{'.'}</p>} {/* display error message if the password is not valid */}\r\n                                                <input type=\"password\" className=\"form-control form-control-user\"\r\n                                                    name=\"repeatPassword\" placeholder=\"Repeat Password\" {...register('repeatPassword')}/>\r\n                                                {errors.repeatPassword ? <p className='error-msg'>{errors.repeatPassword?.message}</p> : <p className='space2'>{'.'}</p>} {/* display error message if the repeat password is not valid */}\r\n                                            </div>\r\n                                            <input type=\"submit\" className=\"btn btn-primary btn-user btn-block\" value={'Reset Password'}></input>\r\n                                        </form>\r\n                                        <hr/>\r\n                                        <div className=\"text-center\">\r\n                                            <a className=\"small cursor-pointer\" onClick={handleClickHome}>Disscare</a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <Modal show={showModal} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title className='msg-modal-title'>ALERT!</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body><p className='msg-modal'>{msgModal}</p></Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    \r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\Page404\\Page404.jsx",[],[],"C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\AddNewCarService\\AddNewCarService.jsx",[],[],"C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\ForgotPassword\\ForgotPassword.jsx",["91","92"],[],"import React,{useState} from 'react';\r\nimport { forgotPasswordSchema } from 'Validations/FormsValidation';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useNavigate  } from 'react-router-dom';\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './ForgotPassword.css';\r\n\r\n/* Forgot Password Component */\r\nconst ForgotPassword = () => {\r\n\r\n    const navigate = useNavigate(); /* define hook to navigate to other pages */\r\n    const [showModal, setShow] = useState(false);/*define state for the modal box */\r\n    const [msgModal, setMsgModal] = useState('');/*define state for the message modal box */\r\n\r\n    /* function that navigate to the signUp page */\r\n    const handleClickSignUp = () => {\r\n        navigate('/signUp');\r\n    };\r\n\r\n    /* function that close the modal and reset the message modal*/\r\n    const handleClose = () =>{\r\n        setShow(false);\r\n        if(msgModal === 'Sent! Check your mail.') {\r\n            setMsgModal('');\r\n            handleClickHome();\r\n        }\r\n        setMsgModal('');\r\n   }\r\n   /* function that open the modal and displays it*/\r\n   const handleShow = () =>{\r\n       setShow(true);\r\n   }\r\n\r\n    /* function that navigate to the logIn page */\r\n    const handleClickLogIn = () => {\r\n        navigate('/logIn');\r\n    };\r\n\r\n    /* function that navigate to the home page */\r\n    const handleClickHome = () => {\r\n        navigate('/');\r\n    };\r\n\r\n    /* define useForm for the forgotPassword form */\r\n    const { register, handleSubmit, formState: { errors }} = useForm({\r\n        resolver: yupResolver(forgotPasswordSchema), /* validate the form with the schema */\r\n        mode: \"onChange\" /* validate the form on change */\r\n    });\r\n\r\n    /* function that submit the form and send the data to the server */\r\n    const submitForm = async (data) => {\r\n        \r\n        /* define the request message */\r\n        const requestMsg = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(\r\n                {\r\n                    title:     'ForgotPassword',\r\n                    email:     data.email\r\n                })\r\n        };\r\n        console.log(\"requesting\");\r\n\r\n        /* send the request to the server */\r\n        const response = await fetch('/forgotPassword', requestMsg)\r\n        console.log(response);\r\n        if (!response.ok) { /* if the response is not ok, alert the user */\r\n            setMsgModal('Invalid Details');/* if the response is not ok, alert the user */\r\n            handleShow();\r\n            return;\r\n        }\r\n        /* if the response is ok, alert the user */\r\n        const responseData = await response.json();\r\n        console.log(responseData);\r\n        setMsgModal('Sent! Check your mail.');/* if the response is not ok, alert the user */\r\n        handleShow();\r\n    };\r\n\r\n    return (\r\n        <div className=\"container p-3\">\r\n\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-xl-10 col-lg-12 col-md-9\">\r\n                    <div className=\"card o-hidden border-0 shadow-lg my-5\">\r\n                        <div className=\"card-body p-0\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-6 d-none d-lg-block bg-forgot-password-image\"></div>\r\n                                <div className=\"col-lg-6\">\r\n                                    <div className=\"p-5\">\r\n                                        <div className=\"text-center\">\r\n                                            <h1 className=\"h4 text-gray-900 mb-2\">Forgot Your Password?</h1>\r\n                                            <p className=\"mb-4 forgot-password-data-label\">We get it, stuff happens. Just enter your email address below\r\n                                                and we'll send you a link to reset your password!</p>\r\n                                        </div>\r\n                                        <form className=\"user\" onSubmit={handleSubmit(submitForm)}>\r\n                                            <div className=\"form-group\">\r\n                                                <input type=\"email\" className=\"form-control form-control-user\"\r\n                                                    name=\"email\" aria-describedby=\"emailHelp\"\r\n                                                    placeholder=\"Enter Email Address...\" {...register('email')}/>\r\n                                                    {errors.email ? <p className='error-msg'>{errors.email?.message}</p> : <br/>} {/* display error message if the email is not valid */}\r\n                                            </div>\r\n                                            <input type=\"submit\" className=\"btn btn-primary btn-user btn-block\" value={'Reset Password'}></input> {/* submit button */}\r\n                                        </form>\r\n                                        <hr/>\r\n                                        <div className=\"text-center\">\r\n                                            <a className=\"small cursor-pointer\" onClick={handleClickSignUp}>Create an Account!</a>\r\n                                        </div>\r\n                                        <div className=\"text-center\">\r\n                                            <a className=\"small cursor-pointer\" onClick={handleClickLogIn}>Already have an account? Login!</a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <Modal show={showModal} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title className='msg-modal-title'>ALERT!</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body><p className='msg-modal'>{msgModal}</p></Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    \r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ForgotPassword;","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\AboutUs\\AboutUs.jsx",[],[],"C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\Dashboard\\Dashboard.jsx",["93","94","95","96","97","98","99"],[],"C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\EditCarService\\EditCarService.jsx",[],[],"C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\ReactTable\\ReactTable.jsx",["100"],[],"import { GlobalFilter } from 'components/ReactTable/GlobalFilter';\r\nimport React, { useEffect } from 'react';\r\nimport { useGlobalFilter, useSortBy, useTable, usePagination } from 'react-table';\r\nimport './ReactTable.css';\r\n\r\n/* ReactTable Component */\r\nconst ReactTable = ({\r\n    columns,\r\n    data = [],\r\n    placeholder = <></>,\r\n    onTableRowClick = () => {},\r\n    onTableDoubleClick = () => {},\r\n    getTableRowCSS = () => '',\r\n    filterString = ''\r\n}) => {\r\n\r\n    // Hooks\r\n    const { getTableProps,\r\n            getTableBodyProps,\r\n            headerGroups,\r\n            page,\r\n            nextPage,\r\n            previousPage,\r\n            canNextPage,\r\n            canPreviousPage, \r\n            pageOptions,\r\n            prepareRow,\r\n            state, \r\n            setGlobalFilter } =\r\n        useTable({ columns, data, initialState: { pageSize: 5 } }, useGlobalFilter, useSortBy, usePagination);\r\n\r\n    const { globalFilter } = state;\r\n    const { pageIndex } = state;\r\n    \r\n    // Listen for input changes outside\r\n    useEffect(() => {\r\n        setGlobalFilter(filterString);\r\n    }, [filterString, data]);\r\n\r\n    return (\r\n        <div className=\"table-container\">\r\n        {data.length === 0 ? (\r\n            placeholder\r\n        ) : (\r\n            <div className='table-filter-container'>\r\n                <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\r\n                <table {...getTableProps()}>\r\n                <thead>\r\n                    {headerGroups.map((headerGroup) => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map((column) => (\r\n                        <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                            {column.render('Header')}\r\n                            <span> {column.isSorted ? (column.isSortedDesc ? '🔼' : '🔽') : ''}</span>{' '}\r\n                        </th>\r\n                        ))}\r\n                    </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {page.map((row) => {\r\n                    prepareRow(row);\r\n                    return (\r\n                        <tr\r\n                        {...row.getRowProps()}\r\n                        className={getTableRowCSS(row)}\r\n                        onClick={() => onTableRowClick(row)}\r\n                        onDoubleClick={() => onTableDoubleClick(row)}\r\n                        >\r\n                        {row.cells.map((cell) => {\r\n                            return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>;\r\n                        })}\r\n                        </tr>\r\n                    );\r\n                    })}\r\n                </tbody>\r\n                </table>\r\n                <div className='paging-data-container'>\r\n                    <div className='total-number-of-records'>\r\n                        Showing {pageIndex * 5 + 1} to {pageIndex * 5 + page.length} of {data.length}{' '} records\r\n                    </div>\r\n                    <div className='paging-data-buttons'>\r\n                        <span>\r\n                            page{' '}\r\n                            <strong>\r\n                                {pageIndex + 1} of {pageOptions.length}\r\n                            </strong>{' '}\r\n                        </span>\r\n                        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                            Previous\r\n                        </button>\r\n                        <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                            Next\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReactTable;\r\n","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\Validations\\FormsValidation.js",["101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130"],[],"import * as yup from 'yup'; /* yup is a JavaScript schema builder for value parsing and validation */\r\n\r\n/* Regular expression for letters only */\r\nconst lettersRegExp = /^[a-zA-Z]+$/;\r\n\r\n/* Check if the value contains only letters */\r\nconst checkIfOnlyLetters = (value) => {\r\n    return lettersRegExp.test(value);\r\n};\r\n\r\n/* yup schema for sign up form */\r\nexport const signUpSchema = yup.object().shape({\r\n    firstName: yup.string().required('First name is required').test('is-letters-only', 'First name can only contain letters', checkIfOnlyLetters),\r\n    lastName: yup.string().required('Last name is required').test('is-letters-only', 'Last name can only contain letters', checkIfOnlyLetters),\r\n    email: yup.string().email('Invalid email').required('Email is required'),\r\n    password: yup.string().min(6, 'Password must be at least 6 chars').matches(/[A-Z]/, 'Must include an uppercase character')  \r\n        .matches(/[a-z]/, 'Must include a lowercase character').matches(/\\d/, 'Must include a number')\r\n        .matches(/[!@#\\$%\\^&\\*\\(\\)\\-_\\=\\+\\\\\\|\\[\\]\\{\\};':\\\"\\/<>,\\.\\?`~]+/, 'Must include a special character')\r\n        .required('Password is required'),\r\n    repeatPassword: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match').required('Confirm password is required')\r\n});\r\n\r\n/* yup schema for log in form */\r\nexport const logInSchema = yup.object().shape({\r\n    email: yup.string().email('Invalid email').required('Email is required'),\r\n    password: yup.string().min(6, 'Password must be at least 6 chars').matches(/[A-Z]/, 'Must include an uppercase character')\r\n        .matches(/[a-z]/, 'Must include a lowercase character').matches(/\\d/, 'Must include a number')\r\n        .matches(/[!@#\\$%\\^&\\*\\(\\)\\-_\\=\\+\\\\\\|\\[\\]\\{\\};':\\\"\\/<>,\\.\\?`~]+/, 'Must include a special character')\r\n        .required('Password is required'),\r\n});\r\n\r\n/* yup schema for forgot password form */\r\nexport const forgotPasswordSchema = yup.object().shape({\r\n    email: yup.string().email('Invalid email').required('Email is required'),\r\n});\r\n\r\n/* yup schema for reset password form */\r\nexport const resetPasswordSchema = yup.object().shape({\r\n    email: yup.string().email('Invalid email').required('Email is required'),\r\n    password: yup.string().min(6, 'Password must be at least 6 chars').required('Password is required'),\r\n    repeatPassword: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match').required('Confirm password is required')\r\n});\r\n\r\n/* yup schema for add new car form */\r\nexport const addNewcarServiceSchema = yup.object().shape({\r\n    treatmentNumber: yup.number().integer('Must be an integer number').positive('Must be a positive number').required('Treatment number is required').typeError(\"Must be a number\"),\r\n    treatmentInformation: yup.string().required('Treatment information is required'),\r\n    workerEmail: yup.string().email('Invalid email').required('Worker email is required'),\r\n    carNumber: yup.number().integer('Must be an integer number').positive('Must be a positive number').required('Car number is required').typeError(\"Must be a number\"),\r\n});\r\n\r\n/* yup schema for edit car form */\r\nexport const editcarServiceSchema = yup.object().shape({\r\n    treatmentInformation: yup.string().required('Treatment information is required'),\r\n    workerEmail: yup.string().email('Invalid email').required('Worker email is required'),\r\n    carNumber: yup.number().integer('Must be an integer number').positive('Must be a positive number').required('Car number is required').typeError(\"Must be a number\"),\r\n});","C:\\Users\\moran\\Documents\\GitHub\\Final-task-client-server-course-car-service-info\\client\\src\\components\\ReactTable\\GlobalFilter.js",[],[],{"ruleId":"131","severity":1,"message":"132","line":33,"column":10,"nodeType":"133","endLine":33,"endColumn":12,"suggestions":"134"},{"ruleId":"135","severity":1,"message":"136","line":203,"column":45,"nodeType":"137","endLine":203,"endColumn":117},{"ruleId":"135","severity":1,"message":"136","line":206,"column":45,"nodeType":"137","endLine":206,"endColumn":109},{"ruleId":"135","severity":1,"message":"136","line":171,"column":37,"nodeType":"137","endLine":171,"endColumn":100},{"ruleId":"135","severity":1,"message":"136","line":105,"column":45,"nodeType":"137","endLine":105,"endColumn":107},{"ruleId":"135","severity":1,"message":"136","line":109,"column":45,"nodeType":"137","endLine":109,"endColumn":109},{"ruleId":"135","severity":1,"message":"136","line":112,"column":45,"nodeType":"137","endLine":112,"endColumn":108},{"ruleId":"131","severity":1,"message":"132","line":38,"column":8,"nodeType":"133","endLine":38,"endColumn":10,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":114,"column":29,"nodeType":"137","endLine":114,"endColumn":112},{"ruleId":"139","severity":1,"message":"140","line":117,"column":29,"nodeType":"137","endLine":117,"endColumn":114},{"ruleId":"131","severity":1,"message":"141","line":123,"column":9,"nodeType":"133","endLine":123,"endColumn":11,"suggestions":"142"},{"ruleId":"135","severity":1,"message":"143","line":142,"column":33,"nodeType":"137","endLine":142,"endColumn":109},{"ruleId":"135","severity":1,"message":"143","line":151,"column":41,"nodeType":"137","endLine":152,"endColumn":111},{"ruleId":"144","severity":1,"message":"145","line":154,"column":45,"nodeType":"137","endLine":154,"endColumn":151},{"ruleId":"131","severity":1,"message":"146","line":38,"column":8,"nodeType":"133","endLine":38,"endColumn":28,"suggestions":"147"},{"ruleId":"148","severity":1,"message":"149","line":18,"column":23,"nodeType":"150","messageId":"151","endLine":18,"endColumn":24,"suggestions":"152"},{"ruleId":"148","severity":1,"message":"153","line":18,"column":26,"nodeType":"150","messageId":"151","endLine":18,"endColumn":27,"suggestions":"154"},{"ruleId":"148","severity":1,"message":"155","line":18,"column":29,"nodeType":"150","messageId":"151","endLine":18,"endColumn":30,"suggestions":"156"},{"ruleId":"148","severity":1,"message":"157","line":18,"column":31,"nodeType":"150","messageId":"151","endLine":18,"endColumn":32,"suggestions":"158"},{"ruleId":"148","severity":1,"message":"159","line":18,"column":33,"nodeType":"150","messageId":"151","endLine":18,"endColumn":34,"suggestions":"160"},{"ruleId":"148","severity":1,"message":"161","line":18,"column":38,"nodeType":"150","messageId":"151","endLine":18,"endColumn":39,"suggestions":"162"},{"ruleId":"148","severity":1,"message":"163","line":18,"column":40,"nodeType":"150","messageId":"151","endLine":18,"endColumn":41,"suggestions":"164"},{"ruleId":"148","severity":1,"message":"165","line":18,"column":44,"nodeType":"150","messageId":"151","endLine":18,"endColumn":45,"suggestions":"166"},{"ruleId":"148","severity":1,"message":"167","line":18,"column":46,"nodeType":"150","messageId":"151","endLine":18,"endColumn":47,"suggestions":"168"},{"ruleId":"148","severity":1,"message":"169","line":18,"column":50,"nodeType":"150","messageId":"151","endLine":18,"endColumn":51,"suggestions":"170"},{"ruleId":"148","severity":1,"message":"171","line":18,"column":52,"nodeType":"150","messageId":"151","endLine":18,"endColumn":53,"suggestions":"172"},{"ruleId":"148","severity":1,"message":"173","line":18,"column":57,"nodeType":"150","messageId":"151","endLine":18,"endColumn":58,"suggestions":"174"},{"ruleId":"148","severity":1,"message":"175","line":18,"column":59,"nodeType":"150","messageId":"151","endLine":18,"endColumn":60,"suggestions":"176"},{"ruleId":"148","severity":1,"message":"177","line":18,"column":64,"nodeType":"150","messageId":"151","endLine":18,"endColumn":65,"suggestions":"178"},{"ruleId":"148","severity":1,"message":"179","line":18,"column":66,"nodeType":"150","messageId":"151","endLine":18,"endColumn":67,"suggestions":"180"},{"ruleId":"148","severity":1,"message":"149","line":28,"column":23,"nodeType":"150","messageId":"151","endLine":28,"endColumn":24,"suggestions":"181"},{"ruleId":"148","severity":1,"message":"153","line":28,"column":26,"nodeType":"150","messageId":"151","endLine":28,"endColumn":27,"suggestions":"182"},{"ruleId":"148","severity":1,"message":"155","line":28,"column":29,"nodeType":"150","messageId":"151","endLine":28,"endColumn":30,"suggestions":"183"},{"ruleId":"148","severity":1,"message":"157","line":28,"column":31,"nodeType":"150","messageId":"151","endLine":28,"endColumn":32,"suggestions":"184"},{"ruleId":"148","severity":1,"message":"159","line":28,"column":33,"nodeType":"150","messageId":"151","endLine":28,"endColumn":34,"suggestions":"185"},{"ruleId":"148","severity":1,"message":"161","line":28,"column":38,"nodeType":"150","messageId":"151","endLine":28,"endColumn":39,"suggestions":"186"},{"ruleId":"148","severity":1,"message":"163","line":28,"column":40,"nodeType":"150","messageId":"151","endLine":28,"endColumn":41,"suggestions":"187"},{"ruleId":"148","severity":1,"message":"165","line":28,"column":44,"nodeType":"150","messageId":"151","endLine":28,"endColumn":45,"suggestions":"188"},{"ruleId":"148","severity":1,"message":"167","line":28,"column":46,"nodeType":"150","messageId":"151","endLine":28,"endColumn":47,"suggestions":"189"},{"ruleId":"148","severity":1,"message":"169","line":28,"column":50,"nodeType":"150","messageId":"151","endLine":28,"endColumn":51,"suggestions":"190"},{"ruleId":"148","severity":1,"message":"171","line":28,"column":52,"nodeType":"150","messageId":"151","endLine":28,"endColumn":53,"suggestions":"191"},{"ruleId":"148","severity":1,"message":"173","line":28,"column":57,"nodeType":"150","messageId":"151","endLine":28,"endColumn":58,"suggestions":"192"},{"ruleId":"148","severity":1,"message":"175","line":28,"column":59,"nodeType":"150","messageId":"151","endLine":28,"endColumn":60,"suggestions":"193"},{"ruleId":"148","severity":1,"message":"177","line":28,"column":64,"nodeType":"150","messageId":"151","endLine":28,"endColumn":65,"suggestions":"194"},{"ruleId":"148","severity":1,"message":"179","line":28,"column":66,"nodeType":"150","messageId":"151","endLine":28,"endColumn":67,"suggestions":"195"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["196"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",["197"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useMemo has a missing dependency: 'onClickEdit'. Either include it or remove the dependency array.",["198"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'setGlobalFilter'. Either include it or remove the dependency array.",["199"],"no-useless-escape","Unnecessary escape character: \\$.","Literal","unnecessaryEscape",["200","201"],"Unnecessary escape character: \\^.",["202","203"],"Unnecessary escape character: \\*.",["204","205"],"Unnecessary escape character: \\(.",["206","207"],"Unnecessary escape character: \\).",["208","209"],"Unnecessary escape character: \\=.",["210","211"],"Unnecessary escape character: \\+.",["212","213"],"Unnecessary escape character: \\|.",["214","215"],"Unnecessary escape character: \\[.",["216","217"],"Unnecessary escape character: \\{.",["218","219"],"Unnecessary escape character: \\}.",["220","221"],"Unnecessary escape character: \\\".",["222","223"],"Unnecessary escape character: \\/.",["224","225"],"Unnecessary escape character: \\..",["226","227"],"Unnecessary escape character: \\?.",["228","229"],["230","231"],["232","233"],["234","235"],["236","237"],["238","239"],["240","241"],["242","243"],["244","245"],["246","247"],["248","249"],["250","251"],["252","253"],["254","255"],["256","257"],["258","259"],{"desc":"260","fix":"261"},{"desc":"260","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"messageId":"267","fix":"268","desc":"269"},{"messageId":"270","fix":"271","desc":"272"},{"messageId":"267","fix":"273","desc":"269"},{"messageId":"270","fix":"274","desc":"272"},{"messageId":"267","fix":"275","desc":"269"},{"messageId":"270","fix":"276","desc":"272"},{"messageId":"267","fix":"277","desc":"269"},{"messageId":"270","fix":"278","desc":"272"},{"messageId":"267","fix":"279","desc":"269"},{"messageId":"270","fix":"280","desc":"272"},{"messageId":"267","fix":"281","desc":"269"},{"messageId":"270","fix":"282","desc":"272"},{"messageId":"267","fix":"283","desc":"269"},{"messageId":"270","fix":"284","desc":"272"},{"messageId":"267","fix":"285","desc":"269"},{"messageId":"270","fix":"286","desc":"272"},{"messageId":"267","fix":"287","desc":"269"},{"messageId":"270","fix":"288","desc":"272"},{"messageId":"267","fix":"289","desc":"269"},{"messageId":"270","fix":"290","desc":"272"},{"messageId":"267","fix":"291","desc":"269"},{"messageId":"270","fix":"292","desc":"272"},{"messageId":"267","fix":"293","desc":"269"},{"messageId":"270","fix":"294","desc":"272"},{"messageId":"267","fix":"295","desc":"269"},{"messageId":"270","fix":"296","desc":"272"},{"messageId":"267","fix":"297","desc":"269"},{"messageId":"270","fix":"298","desc":"272"},{"messageId":"267","fix":"299","desc":"269"},{"messageId":"270","fix":"300","desc":"272"},{"messageId":"267","fix":"301","desc":"269"},{"messageId":"270","fix":"302","desc":"272"},{"messageId":"267","fix":"303","desc":"269"},{"messageId":"270","fix":"304","desc":"272"},{"messageId":"267","fix":"305","desc":"269"},{"messageId":"270","fix":"306","desc":"272"},{"messageId":"267","fix":"307","desc":"269"},{"messageId":"270","fix":"308","desc":"272"},{"messageId":"267","fix":"309","desc":"269"},{"messageId":"270","fix":"310","desc":"272"},{"messageId":"267","fix":"311","desc":"269"},{"messageId":"270","fix":"312","desc":"272"},{"messageId":"267","fix":"313","desc":"269"},{"messageId":"270","fix":"314","desc":"272"},{"messageId":"267","fix":"315","desc":"269"},{"messageId":"270","fix":"316","desc":"272"},{"messageId":"267","fix":"317","desc":"269"},{"messageId":"270","fix":"318","desc":"272"},{"messageId":"267","fix":"319","desc":"269"},{"messageId":"270","fix":"320","desc":"272"},{"messageId":"267","fix":"321","desc":"269"},{"messageId":"270","fix":"322","desc":"272"},{"messageId":"267","fix":"323","desc":"269"},{"messageId":"270","fix":"324","desc":"272"},{"messageId":"267","fix":"325","desc":"269"},{"messageId":"270","fix":"326","desc":"272"},{"messageId":"267","fix":"327","desc":"269"},{"messageId":"270","fix":"328","desc":"272"},{"messageId":"267","fix":"329","desc":"269"},{"messageId":"270","fix":"330","desc":"272"},"Update the dependencies array to be: [navigate]",{"range":"331","text":"332"},{"range":"333","text":"332"},"Update the dependencies array to be: [onClickEdit]",{"range":"334","text":"335"},"Update the dependencies array to be: [filterString, data, setGlobalFilter]",{"range":"336","text":"337"},"removeEscape",{"range":"338","text":"339"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"340","text":"341"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"342","text":"339"},{"range":"343","text":"341"},{"range":"344","text":"339"},{"range":"345","text":"341"},{"range":"346","text":"339"},{"range":"347","text":"341"},{"range":"348","text":"339"},{"range":"349","text":"341"},{"range":"350","text":"339"},{"range":"351","text":"341"},{"range":"352","text":"339"},{"range":"353","text":"341"},{"range":"354","text":"339"},{"range":"355","text":"341"},{"range":"356","text":"339"},{"range":"357","text":"341"},{"range":"358","text":"339"},{"range":"359","text":"341"},{"range":"360","text":"339"},{"range":"361","text":"341"},{"range":"362","text":"339"},{"range":"363","text":"341"},{"range":"364","text":"339"},{"range":"365","text":"341"},{"range":"366","text":"339"},{"range":"367","text":"341"},{"range":"368","text":"339"},{"range":"369","text":"341"},{"range":"370","text":"339"},{"range":"371","text":"341"},{"range":"372","text":"339"},{"range":"373","text":"341"},{"range":"374","text":"339"},{"range":"375","text":"341"},{"range":"376","text":"339"},{"range":"377","text":"341"},{"range":"378","text":"339"},{"range":"379","text":"341"},{"range":"380","text":"339"},{"range":"381","text":"341"},{"range":"382","text":"339"},{"range":"383","text":"341"},{"range":"384","text":"339"},{"range":"385","text":"341"},{"range":"386","text":"339"},{"range":"387","text":"341"},{"range":"388","text":"339"},{"range":"389","text":"341"},{"range":"390","text":"339"},{"range":"391","text":"341"},{"range":"392","text":"339"},{"range":"393","text":"341"},{"range":"394","text":"339"},{"range":"395","text":"341"},{"range":"396","text":"339"},{"range":"397","text":"341"},{"range":"398","text":"339"},{"range":"399","text":"341"},[1533,1535],"[navigate]",[1685,1687],[5436,5438],"[onClickEdit]",[1101,1121],"[filterString, data, setGlobalFilter]",[1035,1036],"",[1035,1035],"\\",[1038,1039],[1038,1038],[1041,1042],[1041,1041],[1043,1044],[1043,1043],[1045,1046],[1045,1045],[1050,1051],[1050,1050],[1052,1053],[1052,1052],[1056,1057],[1056,1056],[1058,1059],[1058,1058],[1062,1063],[1062,1062],[1064,1065],[1064,1064],[1069,1070],[1069,1069],[1071,1072],[1071,1071],[1076,1077],[1076,1076],[1078,1079],[1078,1078],[1725,1726],[1725,1725],[1728,1729],[1728,1728],[1731,1732],[1731,1731],[1733,1734],[1733,1733],[1735,1736],[1735,1735],[1740,1741],[1740,1740],[1742,1743],[1742,1742],[1746,1747],[1746,1746],[1748,1749],[1748,1748],[1752,1753],[1752,1752],[1754,1755],[1754,1754],[1759,1760],[1759,1759],[1761,1762],[1761,1761],[1766,1767],[1766,1766],[1768,1769],[1768,1768]]